Documentation for 1-my_list.py
==============================
The module contains the implementation of the MyList class

Usage
=====
	a_list = MyList() creates a new instance of the MyList class which inherits from list

Importing the class from the module:

	>>> MyList = __import__('1-my_list').MyList

Creating a new instance of the class:

	>>> new_list = MyList()

Appending elements to the instance:

	>>> new_list.append(20)
	>>> new_list.append(10)
	>>> new_list.append(50)
	>>> new_list.append(30)
	>>> new_list.append(40)

Printing elements of the instance:

	>>> print(new_list)
	[20, 10, 50, 30, 40]

Using print_sorted method:

	>>> new_list.print_sorted()
	[10, 20, 30, 40, 50]

Passing a list object:

	>>> ls = [87, 54, 40]
	>>> another_list = MyList(ls)
	>>> another_list.print_sorted()
	[40, 54, 87]

Passing an empty list:

	>>> ls = []
	>>> another_list = MyList(ls)
	>>> another_list.print_sorted()
	[]

List of only 1 number:

	>>> mine = MyList()
	>>> mine.append(2)
	>>> print(mine)
	[2]
	>>> mine.print_sorted()
	[2]

List of same numbers:
	
	>>> yours = MyList()
	>>> yours.append(1)
	>>> yours.append(1)
	>>> yours.append(1)
	>>> yours.append(1)
	>>> print(yours)
	[1, 1, 1, 1]
	>>> yours.print_sorted()
	[1, 1, 1, 1]

List of negative numbers:

	>>> theirs = MyList()
	>>> theirs.append(-5)
	>>> theirs.append(1)
	>>> theirs.append(-20)
	>>> theirs.append(-35)
	>>> theirs.append(5)
	>>> theirs.print_sorted()
	[-35, -20, -5, 1, 5]

Error output:

	>>> err_list.print_sorted()
	Traceback (most recent call last):
	NameError: name 'err_list' is not defined
	
	>>> err_list = [3, 4, 5]
	>>> err_list.print_sorted()
	Traceback (most recent call last):
	AttributeError: 'list' object has no attribute 'print_sorted'
