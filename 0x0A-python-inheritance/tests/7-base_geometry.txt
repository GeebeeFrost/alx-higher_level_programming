Tests for 7-base_geometry.py
============================

Importing the class from the module:

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Creating an instance of the class:

>>> bg = BaseGeometry()

Normal usage:

>>> bg.integer_validator("my_int", 12)

Error output:

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.area(1)
Traceback (most recent call last):
TypeError: area() takes 1 positional argument but 2 were given

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("no_value")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("excess_values", 2, 4)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> bg.integer_validator("width", 0)
Traceback (most recent call last):
ValueError: width must be greater than 0

>>> bg.integer_validator("dims", [2, 1])
Traceback (most recent call last):
TypeError: dims must be an integer

>>> bg.integer_validator("width", -4)
Traceback (most recent call last):
ValueError: width must be greater than 0
